[{"authors":["thom"],"categories":null,"content":"Thom Wiggers is a PhD Candidate at the Institute of Computing and Information Sciences, Radboud University in The Netherlands. He is working on the interactions of post-quantum cryptography with protocols, under the supervision of Peter Schwabe.\nVisit Thom’s website at https://thomwiggers.nl\n","date":1708442268,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1708442268,"objectID":"56ecfa99d514ce1ee9405d18b7af45e1","permalink":"https://kemtls.org/author/thom-wiggers/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/thom-wiggers/","section":"authors","summary":"Thom Wiggers is a PhD Candidate at the Institute of Computing and Information Sciences, Radboud University in The Netherlands. He is working on the interactions of post-quantum cryptography with protocols, under the supervision of Peter Schwabe.","tags":null,"title":"Thom Wiggers","type":"authors"},{"authors":["douglasstebila"],"categories":null,"content":"","date":1664283600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1664283600,"objectID":"feb42ed7919ce497e0e233f5cd3292bc","permalink":"https://kemtls.org/author/douglas-stebila/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/douglas-stebila/","section":"authors","summary":"","tags":null,"title":"Douglas Stebila","type":"authors"},{"authors":["peterschwabe"],"categories":null,"content":"","date":163296e4,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1633424160,"objectID":"6e69a9432e77f85b0ca3d336c03452ff","permalink":"https://kemtls.org/author/peter-schwabe/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/peter-schwabe/","section":"authors","summary":"","tags":null,"title":"Peter Schwabe","type":"authors"},{"authors":["Thom Wiggers"],"categories":[],"content":"KEMTLS has been independently implemented by several people. In this post, we briefly describe some of them. Note that these implementations followed the academic description of KEMTLS, which differs from the AuthKEM draft in some small ways.\nPlease let us know if you know of other implementations that we should list here!\nExperimental integration into Rustls The original implementations by Thom Wiggers were based on Rustls. This is the code that was used for the experiments and benchmarks that we reported on in the papers. This code can be found at https://github.com/thomwiggers/kemtls-experiment/. The most recent version is the thesis branch which was used for Thom’s PhD thesis.\nIntegration into Go’s crypto/ssl stack For the experiments on a real-world network, Sofía Celi and Thom Wiggers implemented KEMTLS in Go. This code was archived at https://github.com/kemtls/cloudflare-go-kemtls.\nExperimental integration into Botan The Botan C++ library for TLS experimented with post-quantum cryptography. As part of their work, they built an experimental integration of KEMTLS. This can be found at https://github.com/neXenio/botan/pull/20.\nWolfSSL integration For the experiments with KEMTLS in embedded settings, Ruben Gonzalez integrated KEMTLS in WolfSSL. This implementation, as well as the measurement scripts, can be found at https://github.com/rugo/wolfssl-kemtls-experiments/tree/paperv1.\n","date":1708442268,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1708442268,"objectID":"8f94fe340725960a8031047665a6cc02","permalink":"https://kemtls.org/post/kemtls-implementations/","publishdate":"2024-02-20T16:17:48+01:00","relpermalink":"/post/kemtls-implementations/","section":"post","summary":"KEMTLS has been independently implemented by several people. In this post, we briefly describe some of them. Note that these implementations followed the academic description of KEMTLS, which differs from the AuthKEM draft in some small ways.","tags":[],"title":"KEMTLS Implementations","type":"post"},{"authors":["Ruben Gonzalez","Thom Wiggers"],"categories":["research"],"content":"","date":1670324501,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1670324501,"objectID":"c0f29d4e5ca618c747d07dc77b56cc9d","permalink":"https://kemtls.org/publication/kemtls-embedded/","publishdate":"2022-12-06T12:01:41+01:00","relpermalink":"/publication/kemtls-embedded/","section":"publication","summary":"We investigate the performance of KEMTLS and PQ instantiations of TLS 1.3 on embedded devices.","tags":["kemtls","research"],"title":"KEMTLS vs. Post-Quantum TLS: Performance on Embedded Systems","type":"publication"},{"authors":["Thom Wiggers"],"categories":null,"content":"","date":1664283600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1664283600,"objectID":"7ccf53b48df413bf2e84a97e53063019","permalink":"https://kemtls.org/event/2022-09-27-esorics-kemtls-tamarin/","publishdate":"2022-09-19T15:15:29+02:00","relpermalink":"/event/2022-09-27-esorics-kemtls-tamarin/","section":"event","summary":"Conference presentation of our KEMTLS formal analysis paper at ESORICS 2022","tags":["research","kemtls"],"title":"A tale of two models: formal analysis of KEMTLS in Tamarin","type":"event"},{"authors":["Sofía Celi","Jonathan Hoyland","Douglas Stebila","Thom Wiggers"],"categories":["Post-Quantum","Research"],"content":"Artefacts The Tamarin model based on the Cremers et al. model: Model and proofs The Tamarin model that closely resembles our pen-and-paper proofs: Model and proofs ","date":1664283600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1664283600,"objectID":"1ef303dd1623ab059f2d9c49fab8b714","permalink":"https://kemtls.org/publication/kemtls-tamarin/","publishdate":"2022-05-18T11:33:09+02:00","relpermalink":"/publication/kemtls-tamarin/","section":"publication","summary":"We prove the security of KEMTLS in two Tamarin models.\nOne mode is based on the Cremers et al. model of TLS 1.3;\nthe other closely resembles our pen-and-paper proofs.\nThese models allow us to analyse KEMTLS, and its extension KEMTLS-PDK from different angles.\n","tags":["KEMTLS","tamarin","research","post-quantum cryptography","cryptography"],"title":"A tale of two models: formal verification of KEMTLS in Tamarin","type":"publication"},{"authors":["Thom Wiggers"],"categories":["research"],"content":" A tale of two models: Formal analysis of KEMTLS in Tamarin Sofía Celi, Jonathan Hoyland, Douglas Stebila and Thom Wiggers. Once upon a time...\nObservation: PQ signatures are quite big and/or slow Idea: Use KEMs for authentication Proposal: KEMTLS KEMTLS sequenceDiagram Client-\u0026gt;\u0026gt;+Server: ClientHello: ephemeral kex Server-\u0026gt;\u0026gt;-Client: ServerHello: ephemeral kex Server-\u0026gt;\u0026gt;+Client: Certificate: static KEM pk Client-\u0026gt;\u0026gt;-Server: Ciphertext Client-\u0026gt;\u0026gt;Server: ClientFinished rect rgba(0, 0, 0, 0) Client--\u0026gt;\u0026gt;Server: Application Data end Server-\u0026gt;\u0026gt;Client: ServerFinished Server--\u0026gt;\u0026gt;Client: Application Data sequenceDiagram Client-\u0026gt;\u0026gt;+Server: ClientHello: ephemeral kex Server-\u0026gt;\u0026gt;-Client: ServerHello: ephemeral kex Server-\u0026gt;\u0026gt;+Client: Certificate: static KEM pk Client-\u0026gt;\u0026gt;-Server: Ciphertext Client-\u0026gt;\u0026gt;Server: ClientFinished rect pink Client--\u0026gt;\u0026gt;Server: Application Data end Server-\u0026gt;\u0026gt;Client: ServerFinished Server--\u0026gt;\u0026gt;Client: Application Data Ephemeral KEM key exchange KEM public key in certificate Avoid extra round-trip by letting client send data immediately KEMTLS variants Mutual authentication What if the client already knows the server\u0026#39;s public key? E.g. resumption, or PSK-like hardcoded keys KEMTLS-PDK: KEMTLS with Pre-Distributed Keys Pen-and-paper proofs Original KEMTLS paper Server-to-client authentication KEMTLS-PDK paper: Server-to-client authentication Mutual authentication Both proofs have seen several corrections, and live in similar, but slightly separate models.\nComputer-aided proofs Proving things by hand: Tedious, error-prone work Very easy to subconciously fill in gaps in the analysis in your mind Very hard to consider many variant protocols together Computers: Very, very good at being very, very literal Will not accept handwavyness Have no problem keeping track of different protocol variants Protocol analysis of TLS 1.3 TLS 1.3 has seen lots of pen-and-paper and computer-aided analysis work Including analyses in Tamarin (Cremers et al.), Proverif (Barghavan et al.) TLS 1.3 was developed using a \u0026#34;design-break-fix-release\u0026#34; cycle rather than \u0026#34;design-release-break-patch\u0026#34; cycle (Paterson and Van der Merwe) Tamarin Tamarin models protocols as rules that take in a set of variables and one or more messages, and then emit new variables and messages. The (Dolev-Yao) attacker controls the network and can read, send, change, drop all messages. Any cryptographic operation is perfect. Cryptographic compromise is modeled through manually modeled \u0026#34;oracles\u0026#34; that reveal specific keys. Tamarin rules rule ProtocolMessageI: [ In(message), VariableI(x) ] --[ ReceivedMessageFact(message, x) ]-\u0026gt; [ Out(SomeOtherMessage), VariableII(operation(x)) ] Tamarin Lemmas lemma my_lemma: \u0026#34;All key #i #j. ExchangedKey(key)@#i // some protocol-emitted fact // over `key` at time #i \u0026amp; K(key)@#j // Adversary knows `key` at #j ==\u0026gt; /* then */ /* exists a time #z */ Ex #z. /* at which key was revealed */ RevealedKey(key)@#z /* and #z was before #j */ \u0026amp; #z \u0026lt; #j \u0026#34; Two approaches Approach #1 Take an existing model and adapt it to represent KEMTLS Approach #2 Build a new model from scratch Game plan Approach #1 Take the TLS 1.3 Tamarin model by Cremers et al. Change it to represent KEMTLS(-PDK) ??? Prove it! Approach #2 Simplify the protocol to its cryptographic core Convert the pen-and-paper claimed security properties to Tamarin ??? Prove it Motivations Approach #1 Tried-and-tested TLS model Many tedious protocol details already modeled: Key derivation Handshake encryption Message syntax Record layer Certificate PKI Many existing lemmas: both security lemmas as well as \u0026#34;helper\u0026#34; lemmas Approach #2 Precisely model the different levels of forward-secrecy and explicit authentication properties claimed in our pen-and-paper proofs Don\u0026#39;t carry around the baggage of handshake encryption, full TLS key schedule Analyze KEMTLS\u0026#39; deniability features Feature comparison Feature Model #1 Model #2 Protocol modelling Encrypted handshake messages ✅ ❌ HKDF and HMAC decomposed into hash ✅ ❌ Key exchange and auth KEMs are same algorithm ✅ ❌ Security properties Adversary can reveal long-term keys ✅ ✅ Adversary can reveal ephemeral keys ✅ ❌ Adversary can reveal intermediate session keys ❌ ✅ Secrecy of handshake and traffic keys ✅ ✅ Forward Secrecy ✅ ✅ Multiple flavours of forward secrecy ❌ ✅ Explicit authentication ✅ ✅ Deniability ❌ ✅ Results Approach #1 Managed to make the model auto-prove We did disable some features not immediately relevant to KEMTLS (including post-handshake authentication, PSK) Run-time: 28 hours (many, many cores) Memory required: \u0026gt;120GB of RAM Found a minor bug in a lemma of the Cremers et al. model Approach #2 Found several minor mistakes in stated forward secrecy and authentication properties of KEMTLS and KEMTLS-PDK Proves most security properties of KEMTLS in minutes. Some more thoughts on Model #2 Surprisingly straightforward model: Direct translation of security properties to Tamarin ~40 hours of work: much less than for #1 Modeling in both instances done by …","date":1663577495,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663577495,"objectID":"c649aec6f22a744574de3024aef75bf6","permalink":"https://kemtls.org/slides/kemtls-tamarin/","publishdate":"2022-09-19T10:51:35+02:00","relpermalink":"/slides/kemtls-tamarin/","section":"slides","summary":"A tale of two models: Formal analysis of KEMTLS in Tamarin Sofía Celi, Jonathan Hoyland, Douglas Stebila and Thom Wiggers. Once upon a time... Observation: PQ signatures are quite big and/or slow Idea: Use KEMs for authentication Proposal: KEMTLS KEMTLS sequenceDiagram Client-\u003e\u003e+Server: ClientHello: ephemeral kex Server-\u003e\u003e-Client: ServerHello: ephemeral kex Server-\u003e\u003e+Client: Certificate: static KEM pk Client-\u003e\u003e-Server: Ciphertext Client-\u003e\u003eServer: ClientFinished rect rgba(0, 0, 0, 0) Client--\u003e\u003eServer: Application Data end Server-\u003e\u003eClient: ServerFinished Server--\u003e\u003eClient: Application Data sequenceDiagram Client-\u003e\u003e+Server: ClientHello: ephemeral kex Server-\u003e\u003e-Client: ServerHello: ephemeral kex Server-\u003e\u003e+Client: Certificate: static KEM pk Client-\u003e\u003e-Server: Ciphertext Client-\u003e\u003eServer: ClientFinished rect pink Client--\u003e\u003eServer: Application Data end Server-\u003e\u003eClient: ServerFinished Server--\u003e\u003eClient: Application Data Ephemeral KEM key exchange KEM public key in certificate Avoid extra round-trip by letting client send data immediately KEMTLS variants Mutual authentication What if the client already knows the server's public key?","tags":["kemtls","research"],"title":"A tale of two models: Formal analysis of KEMTLS in Tamarin","type":"slides"},{"authors":["Felix Günther","Simon Rastikian","Patrick Towa","Thom Wiggers"],"categories":["kemtls","research"],"content":"","date":1655562010,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1655562010,"objectID":"02a0ee40eb852bc9d0ad9ceec781d389","permalink":"https://kemtls.org/publication/kemtls-epoch/","publishdate":"2022-05-24T16:20:10+02:00","relpermalink":"/publication/kemtls-epoch/","section":"publication","summary":"The recent KEMTLS protocol (Schwabe, Stebila and Wiggers,CCS’20) is a promising design for a quantum-safe TLS handshake protocol. Focused on the web setting, wherein clients learn server public-key certificates only during connection establishment, a drawback of KEMTLS compared to TLS 1.3 is that it introduces an additional round trip before the server can send data, and an extra one for the client as well in the case of mutual authentication. In many scenarios, including IoT and embedded settings, client devices may however have the targeted server certificate pre-loaded, so that such performance penalty seems unnecessarily restrictive.\n\nThis work proposes a variant of KEMTLS tailored to such scenarios. Our protocol leverages the fact that clients know the server public keys in advance to decrease handshake latency while protecting client identities. It combines medium-lived with long-term server public keys to enable a delayed form of forward secrecy even from the first data flow on, and full forward secrecy upon the first round trip. The new protocol is proved to achieve strong security guarantees, based on the security of the underlying building blocks, in a new model for multi-stage key exchange with medium-lived keys.\n","tags":["KEMTLS","research","kemtls-epoch"],"title":"KEMTLS with Delayed Forward Identity Protection in (Almost) a Single Round","type":"publication"},{"authors":["Thom Wiggers"],"categories":null,"content":"","date":1633616100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633616100,"objectID":"c9105a7b05891994a74089a64b7d4118","permalink":"https://kemtls.org/event/2021-10-07-esorics/","publishdate":"2021-12-01T17:12:34+01:00","relpermalink":"/event/2021-10-07-esorics/","section":"event","summary":"Conference talk about KEMTLS-PDK","tags":null,"title":"KEMTLS-PDK","type":"event"},{"authors":["Sofía Celi","Armando Faz-Hernández","Nick Sullivan","Goutam Tamvada","Luke Valenta","Bas Westerbaan","Thom Wiggers","Christopher Wood"],"categories":["research","cryptography"],"content":"","date":163296e4,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":163296e4,"objectID":"842c5e20dc308fb1545b77de3761971d","permalink":"https://kemtls.org/publication/measuring-kemtls/","publishdate":"2021-07-05T11:42:25+02:00","relpermalink":"/publication/measuring-kemtls/","section":"publication","summary":"KEMTLS (CCS 2020) is a novel alternative to the Transport Layer Security (TLS) handshake that integrates post-quantum algorithms.\nIt uses a key encapsulation mechanism (KEM) for both confidentiality and authentication, achieving post-quantum security while obviating the need for expensive post-quantum signatures. The original KEMTLS paper presents a security analysis, Rust implementation, and benchmarks over emulated networks.\nIn this work, we provide full Go implementations of KEMTLS and several other post-quantum handshake alternatives, describe our integration into a real distributed system, and provide performance evaluations over real network conditions.\nWe compare the standard (non-quantum-resistant) TLS 1.3 handshake with three alternatives: one that uses post-quantum signatures in combination with a KEM (PQTLS), one fully KEM application (KEMTLS), and a reduced round trip version (KEMTLS-PDK).\nIn addition to the performance evaluations, we discuss how the design of these protocols impacts TLS from an implementation and configuration perspective.\n","tags":["research","tls","KEMTLS","cloudflare","post-quantum cryptography","PQTLS"],"title":"Implementing and Measuring KEMTLS","type":"publication"},{"authors":["Peter Schwabe","Douglas Stebila","Thom Wiggers"],"categories":["research","tls","security","cryptography"],"content":"Proof The full version is linked above.\nSoftware The implementation can be found on Github.\n","date":163296e4,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633424160,"objectID":"ab65a6d0e146d9eb0220f1a7afdf1ee6","permalink":"https://kemtls.org/publication/kemtlspdk/","publishdate":"2021-05-12T19:37:15+02:00","relpermalink":"/publication/kemtlspdk/","section":"publication","summary":"We make KEMTLS more efficient in scenarios where the client already has the server's long-term public key, for example through caching or because it's pre-installed.\n","tags":["cryptography","post-quantum","tls","key-encapsulation mechanisms","kemtls"],"title":"More efficient post-quantum KEMTLS with pre-distributed public keys","type":"publication"},{"authors":["Thom Wiggers","Sofía Celi"],"categories":null,"content":"","date":1617019200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617019200,"objectID":"5d35be268c2b14a5ed7ffbc2431d18d8","permalink":"https://kemtls.org/event/2021-03-29-cloudflaretv/","publishdate":"2021-03-29T00:00:00Z","relpermalink":"/event/2021-03-29-cloudflaretv/","section":"event","summary":"Talk about KEMTLS on Cloudflare TV","tags":["KEMTLS","PQTLS","Post-Quantum","research"],"title":"KEMTLS: securing TLS connections from quantum adversaries","type":"event"},{"authors":["Thom Wiggers","Sofía Celi"],"categories":null,"content":"Post-Quantum TLS with KEMs instead of signatures This article has also been posted to Sofía Celi’s blog and the Cloudflare blog.\nFundamentally, the Transport Layer Security protocol (TLS), which secures most of the Internet connections, has mainly been a key exchange authenticated by digital signatures.1 Even though it has undergone major changes since 1994, when SSL 1.0 was introduced by Netscape, it’s main mechanism has remained the same. The key exchange that is used was first based on RSA and later on (elliptic curve) Diffie-Hellman. The signatures used for authentication have almost always been RSA-based, though in recent years other kinds of signatures have been adopted, mainly ECDSA and Ed25519. This recent change to elliptic curve cryptography at both at a key exchange and signature level has resulted in considerable speed and bandwidth benefits in comparison to classic Diffie-Hellman and RSA.\nTLS is the main protocol that protects the connections we use everyday. It is everywhere: it is used when we buy products online, when we register for a newsletter or when we access any kind of website. But, with the imminent threat of the arrival of quantum computers (a threat that seems to be getting closer and closer), we need to reconsider again the future of TLS. A wide-scale post-quantum experiment was carried out by Cloudflare and Google: two post-quantum key exchanges were integrated into their TLS stack and deployed at their edge servers and in Chrome Canary clients. The goal of that experiment was to evaluate the performance and feasibility of deployment of two post-quantum key exchanges in TLS.\nSimilar experiments have been proposed for introducing post-quantum algorithms into the TLS handshake itself. But, they all seem infeasible to be introduced at authentication by signature and key exchange levels as, unfortunately, post-quantum cryptographic primitives are bigger, or slower (or both) than their predecessors. The proposed algorithms under consideration in the NIST post-quantum standardization process use larger mathematical objects than what is used for elliptic curves, traditional Diffie-Hellman or RSA. As a result, the size of public keys, signatures and key exchange material is much bigger than those from elliptic curves, Diffie-Hellman or RSA.\nHow can we solve this problem? How can we use post-quantum algorithms as part of the TLS handshake without making the material too big to be transmitted? In this blogpost, we will introduce a new mechanism for making this happen, explain how it can be integrated into the handshake and talk about implementation details. The key observation in this mechanism is that, while post-quantum algorithms have bigger communication size than their predecessors, post-quantum key exchanges have somewhat smaller sizes than post-quantum signatures, so we can try to replace key exchanges with signatures in some places to save space. We will only focus on the TLS 1.3 handshake as it is the TLS version that should be currently used.\nThe past experiments: making the traditional TLS 1.3 handshake post-quantum TLS 1.3 was introduced in August 2018 with many security and performance improvements (notably, having only one round-trip to complete the handshake). But TLS 1.3 is designed for a world with classical computers, and some of its functionalities will be broken by quantum computers when they arrive.\nThe primary goals of TLS 1.3 are to provide authentication (the server side of the channel is always authenticated, the client side is optionally authenticated), confidentiality and integrity by using a handshake protocol and a record protocol. The handshake protocol, the one of interest for us today, establishes the cryptographic parameters for securing and authenticating a connection. It can be thought of as of having three main phases, as defined in RFC8446:\nThe Parameter Negotiation phase (referred to as ‘Server Parameters’ in RFC8446), which establishes other handshake parameters (whether the client is authenticated, application-layer protocol support, etc).\nThe Key Exchange phase, which establishes shared keying material and selects the cryptographic parameters to be used. Everything after this phase will be encrypted.\nThe Authentication phase, which authenticates the server (and, optionally, the client) and provides key confirmation and handshake integrity.\nThe main idea of past experiments that introduced post-quantum algorithms into the handshake of TLS 1.3 was to use them in place of classical algorithms by advertising them as part of the supported groups (an extension used by the client to indicate which named groups -Elliptic Curve Groups, Finite Field Groups- it supports for key exchange) and key share (an extension which contains the endpoint’s cryptographic parameters) extensions, and, therefore, establishing with them the negotiated connection parameters. Key encapsulation mechanisms (KEMs) are an abstraction of the basic key exchange primitive and were used …","date":1610385300,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610385300,"objectID":"159bf425fdd90b1f3948c05df6fd4230","permalink":"https://kemtls.org/event/2021-01-11-rwc/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/event/2021-01-11-rwc/","section":"event","summary":"Talk about Post-Quantum TLS without Handshake Signatures at RWC 2021 (virtual).","tags":["KEMTLS","PQTLS","Post-Quantum","research"],"title":"Post-Quantum TLS without handshake signatures at RWC 2021","type":"event"},{"authors":["Thom Wiggers"],"categories":null,"content":"","date":160488e4,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":160488e4,"objectID":"32e60493004874381993f9b322df9ec3","permalink":"https://kemtls.org/event/2020-11-12-acmccs_kemtls/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/event/2020-11-12-acmccs_kemtls/","section":"event","summary":"Conference talk about Post-Quantum TLS without Handshake Signatures at ACM CCS (virtual).","tags":["KEMTLS","PQTLS","Post-Quantum","research"],"title":"Post-Quantum TLS without handshake signatures","type":"event"},{"authors":["Thom Wiggers"],"categories":null,"content":"","date":1601856e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1601856e3,"objectID":"db5629e0f3cccbc058e9460bbc85c599","permalink":"https://kemtls.org/event/2020-10-05-lorentz_workshop_kemtls/","publishdate":"2020-10-07T14:57:31+02:00","relpermalink":"/event/2020-10-05-lorentz_workshop_kemtls/","section":"event","summary":"Talk about Post-Quantum TLS without Handshake Signatures at the Lorentz Workshop (virtual)","tags":["KEMTLS","PQTLS","Post-Quantum","research"],"title":"Post-Quantum TLS without handshake signatures","type":"event"},{"authors":["Peter Schwabe","Douglas Stebila","Thom Wiggers"],"categories":["research","tls","security","cryptography"],"content":"Software The raw data and software that accompanies this publication can be found at Github.\n","date":1588636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1601337600,"objectID":"ee6f174ed05e254f2e258281431fd4ab","permalink":"https://kemtls.org/publication/kemtls/","publishdate":"2020-05-05T13:00:00+02:00","relpermalink":"/publication/kemtls/","section":"publication","summary":"We present an alternative to TLS 1.3, by authenticating using only Key-Encapsulation Mechanisms.\nThis allows us to get rid of handshake signatures, as post-quantum signature schemes are expensive,\nboth in bytes and computation times.\n","tags":["cryptography","post-quantum","tls","key-encapsulation mechanisms","kemtls"],"title":"Post-Quantum TLS without handshake signatures","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c1d17ff2b20dca0ad6653a3161942b64","permalink":"https://kemtls.org/people/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/people/","section":"","summary":"","tags":null,"title":"","type":"widget_page"}]